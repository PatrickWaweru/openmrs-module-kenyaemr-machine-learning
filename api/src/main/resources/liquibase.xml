<?xml version="1.0" encoding="UTF-8"?>
 
<databaseChangeLog 
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
 
    <!--
    	See http://wiki.openmrs.org/display/docs/Module+liquibase+File for 
    	documentation on this file.
    
        See http://www.liquibase.org/manual/home#available_database_refactorings
        for a list of supported elements and attributes
    -->
 
	<changeSet id="kenyaemr-ML-table-risk-score-20220324-231000" author="aojwang">
		<preConditions onFail="MARK_RAN">
			<not><tableExists tableName="kenyaemr_ml_patient_risk_score"/></not>
		</preConditions>
		<comment>
			Creating the kenyaemr_ml_patient_risk_score table
		</comment>
		<createTable tableName="kenyaemr_ml_patient_risk_score">
			<column name="id" type="int" autoIncrement="true">
				<constraints primaryKey="true" nullable="false"/>
			</column>
			<column name="source_system_uuid" type="char(38)">
				<constraints nullable="false" unique="false"></constraints>
			</column>
            <column name="patient_id" type="int">
                <constraints nullable="true"/>
            </column>
            <column name="risk_score" type="double">
                <constraints nullable="false"/>
            </column>
            <column name="evaluation_date" type="datetime">
                <constraints nullable="true"/>
            </column>
            <column name="creator" type="int">
                <constraints nullable="false"/>
            </column>
            <column name="date_created" type="datetime">
                <constraints nullable="false"/>
            </column>
            <column name="changed_by" type="int"/>
            <column name="date_changed" type="datetime"/>
            <column defaultValueBoolean="false" name="voided" type="boolean">
                <constraints nullable="false"/>
            </column>
            <column name="voided_by" type="int"/>
            <column name="date_voided" type="datetime"/>
            <column name="voided_reason" type="varchar(255)"/>
		</createTable>
        <addForeignKeyConstraint constraintName="patient_risk_score_creator"
                                 baseTableName="kenyaemr_ml_patient_risk_score" baseColumnNames="creator"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="patient_risk_score_changed_by"
                                 baseTableName="kenyaemr_ml_patient_risk_score" baseColumnNames="changed_by"
                                 referencedTableName="users" referencedColumnNames="user_id"/>
        <addForeignKeyConstraint constraintName="patient_risk_score_patient_pk"
                                 baseTableName="kenyaemr_ml_patient_risk_score" baseColumnNames="patient_id"
                                 referencedTableName="patient" referencedColumnNames="patient_id"/>
    </changeSet>

    <changeSet id="kenyaemr-ML-index-risk-score-20220324-233000" author="aojwang">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <indexExists indexName="index_risk_score_evaluation_date"/>
            </not>
        </preConditions>
        <createIndex indexName="index_risk_score_evaluation_date" tableName="kenyaemr_ml_patient_risk_score" unique="true">
            <column name="evaluation_date"/>
            <column name="patient_id"/>
        </createIndex>
    </changeSet>


    <!-- Add description field to the ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-description-field-20220726-123630"> 
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <columnExists columnName="description" tableName="kenyaemr_ml_patient_risk_score"/>
            </not>
        </preConditions>
        <comment>Adding description column</comment>
        <addColumn tableName="kenyaemr_ml_patient_risk_score" >
            <column name="description"  
                type="varchar(128)" >  
                <constraints nullable="true" />  
            </column>  
        </addColumn>  
    </changeSet>

    <!-- Add risk_factors field to the ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-riskfactors-field-20220726-123630"> 
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <columnExists columnName="risk_factors" tableName="kenyaemr_ml_patient_risk_score"/>
            </not>
        </preConditions>
        <comment>Adding risk factors column</comment>
        <addColumn tableName="kenyaemr_ml_patient_risk_score" >
            <column name="risk_factors"  
                type="varchar(4096)" >  
                <constraints nullable="true" />  
            </column>  
        </addColumn>  
    </changeSet>

    <!-- Add not null constraint to the patient_id column -->
    <changeSet author="pwaweru" id="kenyaemr-ML-patientid-field-20220919-215430"> 
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <columnExists columnName="patient_id" tableName="kenyaemr_ml_patient_risk_score"/>
        </preConditions>
        <comment>Adding not null constraint to patient_id column</comment>
        <addNotNullConstraint 
           columnDataType="int"  
           columnName="patient_id" 
           tableName="kenyaemr_ml_patient_risk_score"/>
    </changeSet>

    <!-- Add not null constraint to the description column -->
    <changeSet author="pwaweru" id="kenyaemr-ML-description-field-20220920-231430"> 
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <columnExists columnName="description" tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <indexExists indexName="index_risk_score_description"/>
            </not>
        </preConditions>
        <comment>Adding not null constraint to description column</comment>
        <addNotNullConstraint 
           columnDataType="varchar(128)"  
           columnName="description" 
           tableName="kenyaemr_ml_patient_risk_score"/>
    </changeSet>

    <!-- Optimize the description field in the risk score table by reducing field size and adding an index -->
    <changeSet author="pwaweru" id="kenyaemr-ML-optimize-description-field-20230509-100030"> 
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <columnExists columnName="description" tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <indexExists indexName="index_risk_score_description"/>
            </not>
        </preConditions>
        <comment>Modify description field size and add index</comment>
        <modifyDataType
            columnName="description"
            newDataType="varchar(128)"
            tableName="kenyaemr_ml_patient_risk_score"/>
        <createIndex indexName="index_risk_score_description" tableName="kenyaemr_ml_patient_risk_score" unique="false">
            <column name="description"/>
        </createIndex>
    </changeSet>

    <changeSet id="kenyaemr-ML-run-IIT-ML-20230728-100030" author="pwaweru">
        <preConditions onFail="MARK_RAN">
            <sqlCheck expectedResult="0">
                SELECT COUNT(*) FROM scheduler_task_config
                WHERE schedulable_class = 'org.openmrs.module.kenyaemrml.task.GenerateIITMLPredictionsTask'
                And name = 'Generate IIT ML Predictions'
            </sqlCheck>
        </preConditions>
        <comment>Inserting processor for generating IIT ML into 'schedule_task_config' table</comment>
        <insert tableName="scheduler_task_config">
            <column name="name" value="Generate IIT ML Predictions" />
            <column name="description" value="Generate IIT ML Predictions For Patients with new GreenCard Encounters" />
            <column name="schedulable_class" value="org.openmrs.module.kenyaemrml.task.GenerateIITMLPredictionsTask" />
            <column name="start_time_pattern" value="MM/dd/yyyy HH:mm:ss" />
            <column name="start_time" valueDate="2023-07-27T15:00:00" />
            <column name="repeat_interval" value="86400" />
            <column name="date_created" valueDate="CURRENT_TIMESTAMP" />
            <column name="created_by" value="1" />
            <column name="start_on_startup" value="1" />
            <column name="started" value="0" />
            <column name="uuid" value="ace6779c-d330-4a73-8724-ae3b0c496a54" />
        </insert>
    </changeSet>

    <!-- Add payload field to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-payload-field-20231106-123630"> 
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <columnExists columnName="payload" tableName="kenyaemr_ml_patient_risk_score"/>
            </not>
        </preConditions>
        <comment>Adding payload column</comment>
        <addColumn tableName="kenyaemr_ml_patient_risk_score" >
            <column name="payload"  
                type="varchar(3072)" >  
                <constraints nullable="true" />  
            </column>  
        </addColumn>  
    </changeSet>

    <!-- Add mfl and ccc fields to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-ccc-mfl-fields-20231107-143630">
        <preConditions onFail="MARK_RAN">
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <columnExists columnName="mflCode" tableName="kenyaemr_ml_patient_risk_score"/>
            </not>
            <not>
                <columnExists columnName="cccNumber" tableName="kenyaemr_ml_patient_risk_score"/>
            </not>
        </preConditions>
        <comment>Adding mfl and ccc columns</comment>
        <addColumn tableName="kenyaemr_ml_patient_risk_score" >
            <column name="mflCode"
                type="varchar(128)" >
                <constraints nullable="true" />
            </column> 
            <column name="cccNumber"
                type="varchar(128)" >
                <constraints nullable="true" />
            </column>
        </addColumn>
    </changeSet>

    <!-- Add IIT ML Debug fields to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-debug-fields-20231106-193630">
        <preConditions>
            <tableExists tableName="kenyaemr_ml_patient_risk_score"/>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="Age"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="AHDNo"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="AHDYes"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="average_tca_last5"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="averagelateness"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="averagelateness_last10"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="averagelateness_last3"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="averagelateness_last5"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="BMI"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="Breastfeedingno"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="BreastfeedingNR"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="Breastfeedingyes"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DayFri"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DayMon"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DaySat"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DaySun"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DayThu"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DayTue"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DayWed"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DifferentiatedCarecommunityartdistributionhcwled"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DifferentiatedCarecommunityartdistributionpeerled"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DifferentiatedCareexpress"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DifferentiatedCarefacilityartdistributiongroup"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DifferentiatedCarefasttrack"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="DifferentiatedCarestandardcare"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="GenderFemale"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="GenderMale"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="late"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="late_last10"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="late_last3"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="late_last5"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="late_rate"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="late28"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="late28_rate"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MaritalStatusDivorced"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MaritalStatusMarried"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MaritalStatusMinor"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MaritalStatusOther"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MaritalStatusPolygamous"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MaritalStatusSingle"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MaritalStatusWidow"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthApr"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthAug"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthDec"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthFeb"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthJan"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthJul"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthJun"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthMar"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthMay"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthNov"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthOct"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="MonthSep"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="most_recent_art_adherencefair"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="most_recent_art_adherencegood"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="most_recent_art_adherencepoor"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="most_recent_vlsuppressed"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="most_recent_vlunsuppressed"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="n_appts"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="n_hvl_threeyears"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="n_lvl_threeyears"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="n_tests_threeyears"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="NextAppointmentDate"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="num_hiv_regimens"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="OptimizedHIVRegimenNo"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="OptimizedHIVRegimenYes"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="PatientSourceOPD"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="PatientSourceOther"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="PatientSourceVCT"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="PopulationTypeGP"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="PopulationTypeKP"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="Pregnantno"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="PregnantNR"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="Pregnantyes"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="recent_hvl_rate"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="StabilityAssessmentStable"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="StabilityAssessmentUnstable"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="timeOnArt"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="unscheduled_rate"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="visit_1"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="visit_2"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="visit_3"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="visit_4"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="visit_5"/>
            </not>
            <not>
                <columnExists tableName="kenyaemr_ml_patient_risk_score" columnName="Weight"/>
            </not>
        </preConditions>
        <addColumn tableName="kenyaemr_ml_patient_risk_score">
            <column name="Age" type="String"/>
            <column name="AHDNo" type="String"/>
            <column name="AHDYes" type="String"/>
            <column name="average_tca_last5" type="String"/>
            <column name="averagelateness" type="String"/>
            <column name="averagelateness_last10" type="String"/>
            <column name="averagelateness_last3" type="String"/>
            <column name="averagelateness_last5" type="String"/>
            <column name="BMI" type="String"/>
            <column name="Breastfeedingno" type="String"/>
            <column name="BreastfeedingNR" type="String"/>
            <column name="Breastfeedingyes" type="String"/>
            <column name="DayFri" type="String"/>
            <column name="DayMon" type="String"/>
            <column name="DaySat" type="String"/>
            <column name="DaySun" type="String"/>
            <column name="DayThu" type="String"/>
            <column name="DayTue" type="String"/>
            <column name="DayWed" type="String"/>
            <column name="DifferentiatedCarecommunityartdistributionhcwled" type="String"/>
            <column name="DifferentiatedCarecommunityartdistributionpeerled" type="String"/>
            <column name="DifferentiatedCareexpress" type="String"/>
            <column name="DifferentiatedCarefacilityartdistributiongroup" type="String"/>
            <column name="DifferentiatedCarefasttrack" type="String"/>
            <column name="DifferentiatedCarestandardcare" type="String"/>
            <column name="GenderFemale" type="String"/>
            <column name="GenderMale" type="String"/>
            <column name="late" type="String"/>
            <column name="late_last10" type="String"/>
            <column name="late_last3" type="String"/>
            <column name="late_last5" type="String"/>
            <column name="late_rate" type="String"/>
            <column name="late28" type="String"/>
            <column name="late28_rate" type="String"/>
            <column name="MaritalStatusDivorced" type="String"/>
            <column name="MaritalStatusMarried" type="String"/>
            <column name="MaritalStatusMinor" type="String"/>
            <column name="MaritalStatusOther" type="String"/>
            <column name="MaritalStatusPolygamous" type="String"/>
            <column name="MaritalStatusSingle" type="String"/>
            <column name="MaritalStatusWidow" type="String"/>
            <column name="MonthApr" type="String"/>
            <column name="MonthAug" type="String"/>
            <column name="MonthDec" type="String"/>
            <column name="MonthFeb" type="String"/>
            <column name="MonthJan" type="String"/>
            <column name="MonthJul" type="String"/>
            <column name="MonthJun" type="String"/>
            <column name="MonthMar" type="String"/>
            <column name="MonthMay" type="String"/>
            <column name="MonthNov" type="String"/>
            <column name="MonthOct" type="String"/>
            <column name="MonthSep" type="String"/>
            <column name="most_recent_art_adherencefair" type="String"/>
            <column name="most_recent_art_adherencegood" type="String"/>
            <column name="most_recent_art_adherencepoor" type="String"/>
            <column name="most_recent_vlsuppressed" type="String"/>
            <column name="most_recent_vlunsuppressed" type="String"/>
            <column name="n_appts" type="String"/>
            <column name="n_hvl_threeyears" type="String"/>
            <column name="n_lvl_threeyears" type="String"/>
            <column name="n_tests_threeyears" type="String"/>
            <column name="NextAppointmentDate" type="String"/>
            <column name="num_hiv_regimens" type="String"/>
            <column name="OptimizedHIVRegimenNo" type="String"/>
            <column name="OptimizedHIVRegimenYes" type="String"/>
            <column name="PatientSourceOPD" type="String"/>
            <column name="PatientSourceOther" type="String"/>
            <column name="PatientSourceVCT" type="String"/>
            <column name="PopulationTypeGP" type="String"/>
            <column name="PopulationTypeKP" type="String"/>
            <column name="Pregnantno" type="String"/>
            <column name="PregnantNR" type="String"/>
            <column name="Pregnantyes" type="String"/>
            <column name="recent_hvl_rate" type="String"/>
            <column name="StabilityAssessmentStable" type="String"/>
            <column name="StabilityAssessmentUnstable" type="String"/>
            <column name="timeOnArt" type="String"/>
            <column name="unscheduled_rate" type="String"/>
            <column name="visit_1" type="String"/>
            <column name="visit_2" type="String"/>
            <column name="visit_3" type="String"/>
            <column name="visit_4" type="String"/>
            <column name="visit_5" type="String"/>
            <column name="Weight" type="String"/>
        </addColumn>
    </changeSet>

    <!-- Add IIT ML stored procedures - patient visits to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-sp-patient-visits-20231218-153630">
        <preConditions>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE routine_name = 'sp_iitml_get_visits'
                AND routine_type = 'PROCEDURE'
            </sqlCheck>
        </preConditions>
        <createProcedure>
            DELIMITER $$
            CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_iitml_get_visits`(
            IN in_patient_id int
            )
            BEGIN
            select
            d.patient_id                                                           as PatientPK,
            case
            when fup.visit_date < '1990-01-01' then null
            else CAST(fup.visit_date AS DATE) end                              AS VisitDate,
            case
            when fup.next_appointment_date < '1990-01-01' then null
            else CAST(fup.next_appointment_date AS DATE) end                   AS NextAppointmentDate,
            (case fup.visit_scheduled
            when 1 then "Scheduled"
            when 2 then 'Unscheduled'
            else "" end)                                                      as VisitType,
            t.height                                                               as Height,
            t.weight                                                               as Weight,
            case fup.pregnancy_status
            when 1065 then 'Yes'
            when 1066 then 'No'
            end                                                                as Pregnant,
            (case fup.differentiated_care
            when 164942 then "Standard Care"
            when 164943 then "Fast Track"
            when 164944 then "Community ART Distribution - HCW Led"
            when 164945 then "Community ART Distribution - Peer Led"
            when 164946 then "Facility ART Distribution Group"
            else "" end)                                                      as DifferentiatedCare,
            CASE fup.stability
            WHEN 1 THEN 'Stable'
            WHEN 2
            THEN 'Not Stable' END                                          as StabilityAssessment,
            concat(
            IF(fup.arv_adherence = 159405, 'Good',
            IF(fup.arv_adherence = 159406, 'Fair', IF(fup.arv_adherence = 159407, 'Poor', ''))),
            IF(fup.arv_adherence in (159405, 159406, 159407), '|', ''),
            IF(fup.ctx_adherence = 159405, 'Good',
            IF(fup.ctx_adherence = 159406, 'Fair', IF(fup.ctx_adherence = 159407, 'Poor', '')))
            )                                                                  AS Adherence,
            case fup.who_stage
            when 1220 then 1
            when 1221 then 2
            when 1222 then 3
            when 1223 then 4
            when 1204 then 1
            when 1205 then 2
            when 1206 then 3
            when 1207 then 4
            else ''
            end                                                                as WHOStage,
            if(d.gender = 'F', (case fup.breastfeeding when 1065 then 'Yes' when 1066 then 'No' end),
            'N/A')                                                              as Breastfeeding,
            'ART|CTX'                                                              as AdherenceCategory
            from dwapi_etl.etl_patient_demographics d
            join dwapi_etl.etl_patient_hiv_followup fup on fup.patient_id = d.patient_id
            join kenyaemr_etl.etl_default_facility_info i
            left join (select t.patient_id,
            t.visit_date,
            t.weight,
            t.height,
            t.systolic_pressure,
            t.diastolic_pressure,
            t.temperature,
            t.z_score_absolute,
            t.z_score,
            t.pulse_rate,
            t.respiratory_rate,
            t.oxygen_saturation,
            t.muac,
            t.nutritional_status
            from dwapi_etl.etl_patient_triage t) t
            on fup.patient_id = t.patient_id and date(fup.visit_date) = date(t.visit_date)
            left join (select de.patient_id, mid(max(concat(de.visit_date, de.regimen)), 11) as regimen
            from dwapi_etl.etl_drug_event de
            where de.discontinued is null
            group by de.patient_id) de on fup.patient_id = de.patient_id
            where d.unique_patient_no is not null
            and fup.visit_date > '1990-01-01'
            and fup.next_appointment_date is not null
            and fup.visit_id is not null
            and d.patient_id = in_patient_id;
            END$$
            DELIMITER ;

        </createProcedure>
    </changeSet>

    <!-- Add IIT ML stored procedures - pharmacy visits to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-sp-pharmacy-visits-20231218-153630">
        <preConditions>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE routine_name = 'sp_iitml_get_pharmacy_visits'
                AND routine_type = 'PROCEDURE'
            </sqlCheck>
        </preConditions>
        <createProcedure>
            DELIMITER $$
            CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_iitml_get_pharmacy_visits`(
            IN in_patient_id int
            )
            BEGIN
            select
            d.patient_id                                                 as PatientPK,
            ph.visit_date                                                as DispenseDate,
            DATE_ADD(ph.visit_date, INTERVAL ph.duration DAY)            as ExpectedReturn,
            Drug,
            CASE
            WHEN is_arv = 1 THEN 'ARV'
            WHEN is_ctx = 1 OR is_dapsone = 1 THEN 'Prophylaxis' END AS TreatmentType
            from (SELECT *
            FROM ((select patient_id,
            uuid,
            visit_id,
            visit_date,
            encounter_id,
            (case drug when 105281 then 'CTX' when 74250 then 'DAPSONE' end) as drug,
            is_arv,
            is_ctx,
            is_dapsone,
            drug_name                                                        as drugreg,
            frequency,
            visit_date                                                       as DispenseDate,
            duration_in_days                                                 as duration,
            duration_in_days                                                 as PeriodTaken,
            DATE_ADD(visit_date, INTERVAL duration_in_days DAY)              as ExpectedReturn,
            CASE WHEN is_ctx = 1 OR is_dapsone = 1 THEN 'Prophylaxis' END    AS TreatmentType,
            ''                                                               as RegimenLine,
            ''                                                               as regimen,
            CASE
            WHEN is_ctx = 1 THEN 'CTX'
            WHEN is_dapsone = 1 THEN 'DAPSONE' END                       AS ProphylaxisType,
            ''                                                               as previousRegimen,
            ''                                                               as RegimenChangedSwitched,
            ''                                                               as RegimenChangeSwitchReason,
            ''                                                               as StopRegimenReason,
            ''                                                               as StopRegimenDate,
            ''                                                               as prev_Regimen,
            ph.date_created,
            ph.date_last_modified,
            ph.voided                                                        as voided
            from dwapi_etl.etl_pharmacy_extract ph
            where is_arv = 1
            group by ph.encounter_id
            order by patient_id, DispenseDate)
            UNION ALL
            (SELECT e.patient_id                                                                        as patient_id,
            e.uuid                                                                              as uuid,
            ''                                                                                  as visit_id,
            e.visit_date,
            e.encounter_id,
            regimen                                                                                drug,
            1                                                                                   as is_arv,
            0                                                                                   as is_ctx,
            0                                                                                   as is_dapsone,
            regimen_name                                                                        as drugreg,
            ''                                                                                     frequency,
            date_started                                                                        as DispenseDate,
            null                                                                                as duration,
            null                                                                                as PeriodTaken,
            null                                                                                as ExpectedReturn,
            'ARV'                                                                               AS TreatmentType,
            e.regimen_line                                                                      as regimen_line,
            e.regimen                                                                           as regimen,
            ''                                                                                  as ProphylaxisType,
            @prev_regimen                                                                          previousRegimen,
            coalesce(@s := (if(ifnull(@prev_regimen_line, '') <> regimen_line and discontinued = 1, 'Switch',
            NULL)),
            (if(@prev_regimen <> regimen and discontinued = 1, 'Substitution', NULL))) as RegimenChangedSwitched,
            (case reason_discontinued
            when 160559 then 'Risk of pregnancy'
            when 160561 then 'New drug available'
            when 160567 then 'New diagnosis of Tuberculosis'
            when 160569 then 'Virological failure'
            when 159598 then 'Non-compliance with treatment or therapy'
            when 1754 then 'Drugs out of stock'
            when 1434 then 'Pregnancy'
            when 1253 then 'Completed PMTCT'
            when 843 then 'Clinical treatment failure'
            when 160566 then 'Immunological failure'
            when 102 then 'Drug toxicity'
            when 5622 then 'Other'
            else '' end)                                                                   as RegimenChangeSwitchReason,
            (case reason_discontinued
            when 102 then 'Drug toxicity'
            when 160567 then 'New diagnosis of Tuberculosis'
            when 160569 then 'Virologic failure'
            when 159598 then 'Non-compliance with treatment or therapy'
            when 1754 then 'Medications unavailable'
            when 160016 then 'Planned Treatment interruption'
            when 1434 then 'Currently pregnant'
            when 1253 then 'Completed PMTCT'
            when 843 then 'Regimen failure'
            when 5622 then 'Other'
            when 160559 then 'Risk of pregnancy'
            when 160561 then 'New drug available'
            else '' end)                                                                   as StopRegimenReason,
            if(discontinued = 1, date_discontinued, NULL)                                       as StopRegimenDate,
            @prev_regimen := e.regimen                                                             prev_regimen,
            e.date_created                                                                      as date_created,
            e.date_last_modified                                                                as date_last_modified,
            e.voided                                                                            as voided
            FROM dwapi_etl.etl_drug_event e,
            (SELECT @s := 0, @prev_regimen := -1, @x := 0, @prev_regimen_line := -1) s
            where e.program = 'HIV'
            group by e.encounter_id
            ORDER BY e.patient_id, e.date_started)
            UNION ALL
            (select patient_id,
            uuid,
            visit_id,
            visit_date,
            encounter_id,
            drug_short_name                                                             as drug,
            1                                                                           as is_arv,
            ''                                                                          as is_ctx,
            ''                                                                          as is_dapsone,
            drug_name                                                                   as drugreg,
            frequency,
            visit_date                                                                  as DispenseDate,
            (case duration_units
            when 'DAYS' then duration
            when 'MONTHS' then duration * 30
            when 'WEEKS' then duration * 7 end)                                    as duration,
            (case duration_units
            when 'DAYS' then duration
            when 'MONTHS' then duration * 30
            when 'WEEKS' then duration * 7 end)                                    as PeriodTaken,
            DATE_ADD(visit_date, INTERVAL (case duration_units
            when 'DAYS' then duration
            when 'MONTHS' then duration * 30
            when 'WEEKS' then duration * 7 end) DAY) as ExpectedReturn,
            ''                                                                          AS TreatmentType,
            ''                                                                          as RegimenLine,
            drug_name                                                                   as regimen,
            ''                                                                          AS ProphylaxisType,
            ''                                                                          as previousRegimen,
            ''                                                                          as RegimenChangedSwitched,
            ''                                                                          as RegimenChangeSwitchReason,
            ''                                                                          as StopRegimenReason,
            ''                                                                          as StopRegimenDate,
            ''                                                                          as prev_Regimen,
            do.date_created,
            do.date_last_modified,
            do.voided                                                                   as voided
            from dwapi_etl.etl_drug_order do
            group by do.order_group_id, do.patient_id, do.encounter_id
            order by do.patient_id, DispenseDate)) A
            order by A.DispenseDate, A.patient_id) ph
            join dwapi_etl.etl_patient_demographics d on d.patient_id = ph.patient_id
            left outer join concept_name cn on cn.concept_id = ph.drug and cn.concept_name_type = 'FULLY_SPECIFIED'
            and cn.locale = 'en'
            left outer join concept_name cn2 on cn2.concept_id = ph.drug and cn2.concept_name_type = 'SHORT'
            and cn.locale = 'en'
            left outer join dwapi_etl.etl_patient_hiv_followup fup on fup.encounter_id = ph.encounter_id
            and fup.patient_id = ph.patient_id
            join kenyaemr_etl.etl_default_facility_info i
            where unique_patient_no is not null
            and drugreg is not null
            and d.patient_id = in_patient_id
            order by ph.patient_id, ph.DispenseDate;
            END$$
            DELIMITER ;
        </createProcedure>
    </changeSet>

    <!-- Add IIT ML stored procedures - patient lab to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-sp-patient-lab-20231218-153630">
        <preConditions>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE routine_name = 'sp_iitml_get_patient_lab'
                AND routine_type = 'PROCEDURE'
            </sqlCheck>
        </preConditions>
        <createProcedure>
            DELIMITER $$
            CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_iitml_get_patient_lab`(
            IN in_patient_id int
            )
            BEGIN
            select
            d.patient_id                                                                     as PatientPK,
            DATE(l.date_test_result_received)                                                as ReportedByDate,
            if(lab_test = 299, (case test_result
            when 1228 then "REACTIVE"
            when 1229 then "NON-REACTIVE"
            when 1304 then "POOR SAMPLE QUALITY" end),
            if(lab_test = 1030, (case test_result
            when 1138 then "INDETERMINATE"
            when 664 then "NEGATIVE"
            when 703 then "POSITIVE"
            when 1304 then "POOR SAMPLE QUALITY" end),
            if(lab_test = 302, (case test_result
            when 1115 then "Normal"
            when 1116 then "Abnormal"
            when 1067 then "Unknown" end),
            if(lab_test = 32, (case test_result
            when 664 then "NEGATIVE"
            when 703 then "POSITIVE"
            when 1138 then "INDETERMINATE" end),
            if(lab_test = 1305, (case test_result
            when 1306 then "BEYOND DETECTABLE LIMIT"
            when 1301 then "DETECTED"
            when 1302 then "LDL"
            when 1304 then "POOR SAMPLE QUALITY" end),
            if(lab_test = 1029,
            (case test_result when 664 then "Negative" when 703 then "Positive" end),
            if(lab_test = 1031, (case test_result
            when 1311 then "<1:2"
            when 1312 then "01:02"
            when 1313 then "1:4"
            when 1314 then "01:08"
            when 1315 then "01:16"
            when 1316 then "01:32"
            when 1317 then ">1:32"
            when 1304 then "Poor Sample Quality"
            when 163621 then "1:64"
            when 163622 then "1:128"
            when 163623 then "1:256"
            when 163624 then ">1:572" end),
            if(lab_test = 1032, (case test_result
            when 703 then "Positive"
            when 664 then "Negative"
            when 1300 then "Equivocal"
            when 1304 then "Poor Sample Quality" end),
            if(lab_test in (1619, 167452), (case test_result
            when 703 then "Positive"
            when 664 then "Negative"
            when 1067 then "Unknown" end),
            if(lab_test = 167459, (case test_result
            when 163747 then "Absent"
            when 163748 then "Present" end),
            if(lab_test = 307, (case test_result
            when 1364 then "Three Plus"
            when 1362 then "One Plus"
            when 1363 then "Two Plus"
            when 664 then "Negative"
            when 159985 then "Scanty"
            when 703 then "Positive"
            when 160008 then "Contaminated specimen"
            when 164369 then "Results not available"
            when 1118 then "Not done" end),
            if(lab_test = 162202, (case test_result
            when 664 then "NEGATIVE"
            when 162203
            then "Mycobacterium tuberculosis detected with rifampin resistance"
            when 162204
            then "Mycobacterium tuberculosis detected without rifampin resistance"
            when 164104
            then "Mycobacterium tuberculosis detected with indeterminate rifampin resistance"
            when 163611 then "Invalid"
            when 1138 then "INDETERMINATE" end),
            test_result))))))))))))                      as TestResult
            from dwapi_etl.etl_laboratory_extract l
            left join openmrs.kenyaemr_order_entry_lab_manifest_order o on l.order_id = o.order_id
            join dwapi_etl.etl_patient_demographics d on d.patient_id = l.patient_id
            join kenyaemr_etl.etl_default_facility_info i
            where d.unique_patient_no is not null and
            d.patient_id = in_patient_id
            order by ReportedByDate asc;
            END$$
            DELIMITER ;

        </createProcedure>
    </changeSet>

    <!-- Add IIT ML stored procedures - patient demographics to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-sp-patient-demographics-20231218-153630">
        <preConditions>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE routine_name = 'sp_iitml_get_patient_demographics'
                AND routine_type = 'PROCEDURE'
            </sqlCheck>
        </preConditions>
        <createProcedure>
            DELIMITER $$
            CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_iitml_get_patient_demographics`(
            IN in_patient_id int
            )
            BEGIN
            select
            d.patient_id                                                                as PatientPK,
            case d.gender when 'M' then 'Male' when 'F' then 'Female' end               as Gender,
            d.dob                                                                       as DOB,
            case max(hiv.entry_point)
            when 160542 then 'OPD'
            when 160563 then 'Other'
            when 160539 then 'VCT'
            when 160538 then 'PMTCT'
            when 160541 then 'TB'
            when 160536 then 'IPD - Adult'
            /*else cn.name*/
            end                                                                     as PatientSource,
            UPPER(d.marital_status)                                                     as MaritalStatus,
            UPPER(d.education_level)                                                    as EducationLevel,
            if(c.client_id is not null, 'Key population', (select CASE
            WHEN mid(max(concat(f.visit_date, f.population_type)), 11) = 164929
            THEN 'Key population'
            WHEN mid(max(concat(f.visit_date, f.population_type)), 11) = 164928
            THEN 'General Population'
            END
            from dwapi_etl.etl_patient_hiv_followup f
            WHERE f.encounter_id = max(enr.encounter_id)
            group by f.patient_id))      AS PopulationType
            from dwapi_etl.etl_hiv_enrollment hiv
            inner join dwapi_etl.etl_patient_demographics d on hiv.patient_id = d.patient_id
            left outer join dwapi_etl.etl_mch_enrollment mch on mch.patient_id = d.patient_id
            left outer join dwapi_etl.etl_patient_hiv_followup enr on enr.patient_id = d.patient_id
            left outer join dwapi_etl.etl_tb_enrollment tb on tb.patient_id = d.patient_id
            left outer join dwapi_etl.etl_drug_event de on de.patient_id = d.patient_id
            left join concept_name ts on ts.concept_id = hiv.relationship_of_treatment_supporter and
            ts.concept_name_type = 'FULLY_SPECIFIED' and ts.locale = 'en'
            left join person_address patAd ON patAd.person_id = d.patient_id and patAd.voided = 0
            left join
            (select Patient_Id,
            program,
            if(mid(max(concat(date_enrolled, date_completed)), 20) is null, 'Active', 'Inactive') as status,
            date_created,
            date_last_modified
            from dwapi_etl.etl_patient_program
            group by Patient_Id, program) as prg on prg.patient_id = d.patient_id
            left join dwapi_etl.etl_contact c
            on c.client_id = d.patient_id and prg.status = 'Active' and prg.program = 'KP'
            join kenyaemr_etl.etl_default_facility_info i
            where unique_patient_no is not null and
            d.patient_id = in_patient_id
            group by d.patient_id
            order by d.patient_id;
            END$$
            DELIMITER ;

        </createProcedure>
    </changeSet>

    <!-- Add IIT ML stored procedures - patient ART to the IIT ML table -->
    <changeSet author="pwaweru" id="kenyaemr-ML-sp-patient-ART-20231218-153630">
        <preConditions>
            <sqlCheck expectedResult="0">
                SELECT COUNT(*)
                FROM information_schema.routines
                WHERE routine_name = 'sp_iitml_get_patient_ART'
                AND routine_type = 'PROCEDURE'
            </sqlCheck>
        </preConditions>
        <createProcedure>
            DELIMITER $$
            CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_iitml_get_patient_ART`(
            IN in_patient_id int
            )
            BEGIN
            select
            d.patient_id                                                                    as PatientPK,
            DATE(least(ifnull(mid(min(concat(hiv.visit_date, hiv.date_started_art_at_transferring_facility)), 11),
            reg.date_started + interval rand() * 1000 year), reg.date_started)) as StartARTDate
            from dwapi_etl.etl_hiv_enrollment hiv
            join dwapi_etl.etl_patient_demographics d on d.patient_id = hiv.patient_id
            left outer join (select d.patient_id,
            coalesce(max(date(d.effective_discontinuation_date)),
            max(date(d.visit_date))) as ExitDate,
            (case d.discontinuation_reason
            when 159492 then 'Transfer Out'
            when 160034 then 'Died'
            when 5240 then 'LTFU'
            when 819 then 'Stopped Treatment'
            else '' end)                 as ExitReason,
            max(d.date_last_modified)         as date_last_modified
            from dwapi_etl.etl_patient_program_discontinuation d
            where d.program_name = 'HIV'
            group by d.patient_id) disc on disc.patient_id = hiv.patient_id
            left outer join (select e.patient_id,
            e.uuid                                                               as uuid,
            min(e.date_started)                                                  as art_start_date,
            min(e.date_started)                                                  as date_started_art_this_facility,
            e.date_started,
            e.gender,
            e.dob,
            d.ExitDate                                                           as dis_date,
            if(d.ExitDate is not null, 1, 0)                                     as TOut,
            e.regimen,
            e.regimen_line,
            e.alternative_regimen,
            max(fup.next_appointment_date)                                       as latest_tca,
            last_art_date,
            last_regimen,
            last_regimen_line,
            if(enr.transfer_in_date is not null, 1, 0)                           as TIn,
            if(enr.transfer_in_date is not null, enr.previous_art_use, NULL)     as PreviousARTUse,
            if(enr.transfer_in_date is not null, enr.previous_art_purpose, NULL) as PreviousARTPurpose,
            if(enr.transfer_in_date is not null, enr.previous_art_regimen, NULL) as PreviousARTRegimen,
            if(enr.transfer_in_date is not null,
            enr.transfer_in_date,
            NULL)                                                             as DateLastUsed,
            max(fup.visit_date)                                                  as latest_vis_date,
            e.date_created,
            e.date_last_modified
            from (select e.patient_id,
            e.uuid,
            p.dob,
            p.Gender,
            min(e.date_started)                                             as date_started,
            max(e.date_started)                                             as last_art_date,
            mid(min(concat(e.date_started, e.regimen_name)), 11)            as regimen,
            mid(min(concat(e.date_started, e.regimen_line)), 11)            as regimen_line,
            mid(max(concat(e.date_started, e.regimen_name)), 11)            as last_regimen,
            mid(max(concat(e.date_started, e.regimen_line)), 11)            as last_regimen_line,
            max(if(discontinued, 1, 0))                                     as alternative_regimen,
            GREATEST(COALESCE(p.date_created, ph.date_created),
            COALESCE(ph.date_created, p.date_created))             as date_created,
            GREATEST(COALESCE(p.date_last_modified, ph.date_last_modified),
            COALESCE(ph.date_last_modified, p.date_last_modified)) as date_last_modified,
            e.provider                                                      as provider
            from dwapi_etl.etl_drug_event e
            join dwapi_etl.etl_patient_demographics p on p.patient_id = e.patient_id
            left join dwapi_etl.etl_pharmacy_extract ph
            on ph.patient_id = e.patient_id and is_arv = 1
            where e.program = 'HIV'
            group by e.patient_id) e
            left outer join (select d.patient_id,
            coalesce(max(date(d.effective_discontinuation_date)),
            max(date(d.visit_date))) ExitDate
            from dwapi_etl.etl_patient_program_discontinuation d
            where d.program_name = 'HIV'
            group by d.patient_id) d on d.patient_id = e.patient_id
            inner join (select e.patient_id                                           as patient_id,
            mid(max(concat(e.visit_date, e.transfer_in_date)), 11) as transfer_in_date,
            case mid(max(concat(e.visit_date, e.arv_status)), 11)
            when 1 then 'Yes'
            when 0
            then 'No' end                                  as previous_art_use,
            concat_ws('|', NULLIF(
            case mid(max(concat(pre.visit_date, pre.PMTCT)), 11)
            when 1065 then 'PMTCT' end, ''),
            NULLIF(
            case mid(max(concat(pre.visit_date, pre.PEP)), 11)
            when 1 then 'PEP' end, ''),
            NULLIF(
            case mid(max(concat(pre.visit_date, pre.PrEP)), 11)
            when 1065 then 'PrEP' end, ''),
            NULLIF(
            case mid(max(concat(pre.visit_date, pre.HAART)), 11)
            when 1185 then 'HAART' end, '')
            )                                                  as previous_art_purpose,
            concat_ws('|', NULLIF(
            case mid(max(concat(pre.visit_date, pre.PMTCT_regimen)), 11)
            when 164968 then 'AZT+3TC+DTG'
            when 164969 then 'TDF+3TC+DTG'
            when 164970 then 'ABC+3TC+DTG'
            when 164505 then 'TDF+3TC+EFV'
            when 792 then 'D4T+3TC+NVP'
            when 160124 then 'AZT+3TC+EFV'
            when 160104 then 'D4T+3TC+EFV'
            when 161361 then 'EDF+3TC+EFV'
            when 104565 then 'EFV+FTC+TDF'
            when 162201 then '3TC+LPV+TDF+r'
            when 817 then 'ABC+3TC+AZT'
            when 162199 then 'ABC+NVP+3TC'
            when 162200 then '3TC+ABC+LPV+r'
            when 162565 then '3TC+NVP+TDF'
            when 1652 then '3TC+NVP+AZT'
            when 162561 then '3TC+AZT+LPV+r'
            when 164511 then 'AZT-3TC-ATV+r'
            when 164512 then 'TDF-3TC-ATV+r'
            when 162560 then '3TC+D4T+LPV+r'
            when 162563 then '3TC+ABC+EFV'
            when 162562 then 'ABC+LPV+R+TDF'
            when 162559 then 'ABC+DDI+LPV+r' end, ''),
            NULLIF(
            case mid(max(concat(pre.visit_date, pre.PEP_regimen)), 11)
            when 164968 then 'AZT+3TC+DTG'
            when 164969 then 'TDF+3TC+DTG'
            when 164970 then 'ABC+3TC+DTG'
            when 164505 then 'TDF+3TC+EFV'
            when 792 then 'D4T+3TC+NVP'
            when 160124 then 'AZT+3TC+EFV'
            when 160104 then 'D4T+3TC+EFV'
            when 1652 then '3TC+NVP+AZT'
            when 161361 then 'EDF+3TC+EFV'
            when 104565 then 'EFV+FTC+TDF'
            when 162201 then '3TC+LPV+TDF+r'
            when 817 then 'ABC+3TC+AZT'
            when 162199 then 'ABC+NVP+3TC'
            when 162200 then '3TC+ABC+LPV+r'
            when 162565 then '3TC+NVP+TDF'
            when 162561 then '3TC+AZT+LPV+r'
            when 164511 then 'AZT+3TC+ATV+r'
            when 164512 then 'TDF+3TC+ATV+r'
            when 162560 then '3TC+D4T+LPV+r'
            when 162563 then '3TC+ABC+EFV'
            when 162562 then 'ABC+LPV/R+TDF'
            when 162559 then 'ABC+DDI+LPV+r' end, ''),
            NULLIF(
            case mid(max(concat(pre.visit_date, pre.PrEP_regimen)), 11)
            when 164968 then 'AZT+3TC+DTG'
            when 164969 then 'TDF+3TC+DTG'
            when 164970 then 'ABC+3TC+DTG'
            when 164505 then 'TDF+3TC+EFV'
            when 792 then 'D4T+3TC+NVP'
            when 160124 then 'AZT+3TC+EFV'
            when 160104 then 'D4T+3TC+EFV'
            when 161361 then 'EDF+3TC+EFV'
            when 104565 then 'EFV+FTC+TDF'
            when 162201 then '3TC+LPV+TDF+r'
            when 817 then 'ABC+3TC+AZT'
            when 162199 then 'ABC+NVP+3TC'
            when 162200 then '3TC+ABC+LPV+r'
            when 162565 then '3TC+NVP+TDF'
            when 1652 then '3TC+NVP+AZT'
            when 162561 then '3TC+AZT+LPV+r'
            when 164511 then 'AZT+3TC+ATV+r'
            when 164512 then 'TDF+3TC+ATV+r'
            when 162560 then '3TC+D4T+LPV+r'
            when 162563 then '3TC+ABC+EFV'
            when 162562 then 'ABC+LPV+R+TDF'
            when 162559 then 'ABC+DDI+LPV+r' end, ''),
            NULLIF(
            case mid(max(concat(pre.visit_date, pre.HAART_regimen)), 11)
            when 164968 then 'AZT+3TC+DTG'
            when 164969 then 'TDF+3TC+DTG'
            when 164970 then 'ABC+3TC+DTG'
            when 164505 then 'TDF+3TC+EFV'
            when 792 then 'D4T+3TC+NVP'
            when 160124 then 'AZT+3TC+EFV'
            when 160104 then 'D4T+3TC+EFV'
            when 161361 then 'EDF+3TC+EFV'
            when 104565 then 'EFV+FTC+TDF'
            when 162201 then '3TC+LPV+TDF+r'
            when 817 then 'ABC+3TC+AZT'
            when 162199 then 'ABC+NVP+3TC'
            when 162200 then '3TC+ABC+LPV+r'
            when 162565 then '3TC+NVP+TDF'
            when 1652 then '3TC+NVP+AZT'
            when 162561 then '3TC+AZT+LPV+r'
            when 164511 then 'AZT+3TC+ATV+r'
            when 164512 then 'TDF+3TC+ATV+r'
            when 162560 then '3TC+D4T+LPV+r'
            when 162563 then '3TC+ABC+EFV'
            when 162562 then 'ABC+LPV+R+TDF'
            when 162559 then 'ABC+DDI+LPV+r' end, '')
            )                                                  as previous_art_regimen
            from dwapi_etl.etl_hiv_enrollment e
            left join dwapi_etl.etl_pre_hiv_enrollment_art pre
            on e.encounter_id = pre.encounter_id and e.patient_id = pre.patient_id
            group by e.patient_id) enr on enr.patient_id = e.patient_id
            left outer join dwapi_etl.etl_patient_hiv_followup fup
            on fup.patient_id = e.patient_id
            group by e.patient_id) reg on reg.patient_id = hiv.patient_id
            join kenyaemr_etl.etl_default_facility_info i
            where d.unique_patient_no is not null and
            d.patient_id = in_patient_id
            group by d.patient_id
            having min(hiv.visit_date) is not null
            and StartARTDate is not null;
            END$$
            DELIMITER ;

        </createProcedure>
    </changeSet>
 
</databaseChangeLog>
